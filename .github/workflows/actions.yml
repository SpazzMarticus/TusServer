name: Lint and test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get Composer Cache Directory
        id: get-composer-cache-dir # Instead of composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer
        uses: actions/cache@v2
        id: composer-cache
        with:
          path: ${{ steps.get-composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Installing composer dependencies
        run: composer install --prefer-source --no-interaction --no-progress --optimize-autoloader
      - name: Check for PSR-12 coding style
        run: vendor/bin/phpcs --standard=phpcs.xml
      - name: PHPUnit
        run: vendor/bin/phpunit -c build/phpunit.xml
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Installing npm dependencies (for testing only)
        run: npm ci
      - name: Run PHP built-in webserver (in background)
        run: php -S localhost:8000 example/server.php &
      - name: Run newman tests
        run: node node_modules/newman/bin/newman.js run -e tests/postman/tus.postman_environment.json tests/postman/tus.postman_collection.json --bail